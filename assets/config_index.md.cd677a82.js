import{_ as n}from"./chunks/DeployOnRailwayButton.7d76082f.js";import{_ as l}from"./chunks/ViewCounter.a7933f42.js";import{_ as i,c,a as e,b as a,d as p,e as s,o as r}from"./app.1ca369dc.js";const v=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[{"level":2,"title":"backendUrl","slug":"backendurl"},{"level":2,"title":"filter","slug":"filter"},{"level":2,"title":"Throttle","slug":"throttle"},{"level":2,"title":"trackPopState","slug":"trackpopstate"}],"relativePath":"config/index.md"}'),d={name:"config/index.md"},u=a("h1",{id:"configuration",tabindex:"-1"},[p("Configuration "),a("a",{class:"header-anchor",href:"#configuration","aria-hidden":"true"},"#")],-1),h=s(`<p>The functions <a href="/guide/#automatic-submission"><code>PageViews.autoSubmitViews()</code></a>, <a href="/guide/#manual-submission"><code>PageViews.submitView()</code></a> and <a href="/guide/#fetching-page-views"><code>PageViews.getViews()</code></a> receive an optional configuration as their first argument. This configuration will be merged with the default configuration seen below.</p><div class="language-ts"><span class="copy"></span><div class="highlight-lines"><br><br><br><br><br><br></div><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> defaultConfig</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Config</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">backendUrl</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://page-views.up.railway.app/api/views</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">throttle</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">86400000</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// == 1 day</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">trackPopState</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="backendurl" tabindex="-1">backendUrl <a class="header-anchor" href="#backendurl" aria-hidden="true">#</a></h2><ul><li>Type: <code>string</code></li><li>Default: <code>https://page-views.up.railway.app/api/views</code></li></ul><p>This is the URL of the backend that will be used for aggregating a view counter.</p><p>You may use the provided backend instance, self-host an instance, deploy an instance on Railway (by clicking the button below) or even use a custom backend that adheres to the schema used.</p>`,6),f=s('<h2 id="filter" tabindex="-1">filter <a class="header-anchor" href="#filter" aria-hidden="true">#</a></h2><ul><li>Type: <code>(page: string) =&gt; boolean</code></li><li>Default: <code>() =&gt; true</code></li></ul><p>The <code>filter</code> function is called before a page view is submitted. It can be used to exclude specific pages from being submitted.</p><h2 id="throttle" tabindex="-1">Throttle <a class="header-anchor" href="#throttle" aria-hidden="true">#</a></h2><ul><li>Type: <code>number | false</code></li><li>Default: <code>86400000</code></li></ul><p>The <code>throttle</code> property decides if clients should throttle submitting repeated views of a page. If set to <code>false</code>, every single view will be submitted. Otherwise, the value will is used as a timeout (in milliseconds) for submitting a page view again.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>To achieve this, the library will create <code>localStorage</code> items for each submitted page with a timestamp of the submission. The prefix <code>eu.yeger.page-views.</code> is used to prevent key collisions.</p></div><h2 id="trackpopstate" tabindex="-1">trackPopState <a class="header-anchor" href="#trackpopstate" aria-hidden="true">#</a></h2><ul><li>Type: <code>boolean</code></li><li>Default: <code>false</code></li></ul><p>If this option is set to <code>true</code>, <code>PageViews.autoSubmitViews()</code> will also submit views on <code>popstate</code> events, i.e., back-navigation.</p>',10);function g(y,_,D,b,C,m){const t=l,o=n;return r(),c("div",null,[u,e(t),h,e(o),f])}var T=i(d,[["render",g]]);export{v as __pageData,T as default};
