import{_ as s}from"./chunks/ViewCounter.a7933f42.js";import{_ as t,c as i,a as n,b as e,d as o,e as l,o as c}from"./app.1ca369dc.js";const y=JSON.parse('{"title":"Guide","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation"},{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Automatic Submission","slug":"automatic-submission"},{"level":3,"title":"Manual Submission","slug":"manual-submission"},{"level":3,"title":"Fetching Page Views","slug":"fetching-page-views"},{"level":3,"title":"Custom Pages","slug":"custom-pages"}],"relativePath":"guide/index.md"}'),r={name:"guide/index.md"},d=e("h1",{id:"guide",tabindex:"-1"},[o("Guide "),e("a",{class:"header-anchor",href:"#guide","aria-hidden":"true"},"#")],-1),u=l(`<h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><div class="language-bash"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># with yarn</span></span>
<span class="line"><span style="color:#A6ACCD;">yarn add @yeger/page-views</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or with npm</span></span>
<span class="line"><span style="color:#A6ACCD;">npm install @yeger/page-views</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># or with pnpm</span></span>
<span class="line"><span style="color:#A6ACCD;">pnpm add @yeger/page-views</span></span>
<span class="line"></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><h3 id="automatic-submission" tabindex="-1">Automatic Submission <a class="header-anchor" href="#automatic-submission" aria-hidden="true">#</a></h3><p><code>PageViews.autoSubmitViews()</code> will submit a view of the current page and listen for client-side navigation events to submit those as well. Ideally, you should call this function in the entry-point of your application.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>In order to achieve automatic submitting, the function <code>history.pushState</code> will be augmented to fire a custom event <code>loationchange</code>. As outlined in <a href="https://stackoverflow.com/a/52809105" target="_blank" rel="noopener noreferrer">this</a> StackOverflow answer, there&#39;s currently no other way to achieve this.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>It is safe to call <code>PageViews.autoSubmitViews()</code> multiple times, as consecutive calls will have no effect.</p></div><h3 id="manual-submission" tabindex="-1">Manual Submission <a class="header-anchor" href="#manual-submission" aria-hidden="true">#</a></h3><p><code>PageViews.submitView()</code> can be used to manually submit a view. Its main use-case are static pages without client side navigation. As such, it should be called in the entry-point of your pages.</p><p>However, <a href="./#automatic-submission">automatic submission</a> is recommended over manual submission.</p><h3 id="fetching-page-views" tabindex="-1">Fetching Page Views <a class="header-anchor" href="#fetching-page-views" aria-hidden="true">#</a></h3><p><code>PageViews.getViews()</code> will resolve to the views of the current page.</p><h3 id="custom-pages" tabindex="-1">Custom Pages <a class="header-anchor" href="#custom-pages" aria-hidden="true">#</a></h3><p>As an optional second argument, both <code>PageViews.submitView()</code> and <code>PageViews.getViews()</code> can receive a string that will be submitted instead of the current page.</p>`,14);function p(h,m,g,b,w,f){const a=s;return c(),i("div",null,[d,n(a),u])}var V=t(r,[["render",p]]);export{y as __pageData,V as default};
